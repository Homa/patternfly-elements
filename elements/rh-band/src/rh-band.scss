@import "../../rh-sass/rh-sass";

$LOCAL: band;
$SLOT: "";
$aside-md: 250px;
$aside-lg: 300px;

:host {
  // Spacing values
  --rh-band--paddingTop:                      calc(#{rh-var(container-spacer)} * 4);
  --rh-band--paddingRight:                    #{rh-var(container-spacer)};
  --rh-band--paddingBottom:                   calc(#{rh-var(container-spacer)} * 4);
  --rh-band--paddingLeft:                     #{rh-var(container-spacer)};
  // Surface colors
  --rh-band--backgroundColor:                 #{rh-color(surface--base)};
  --rh-band--backgroundPositionX:             center;
  --rh-band--backgroundPositionY:             center;
  // Border settings
  --rh-band--borderColor:                     transparent;
  --rh-band--borderTopWidth:                  #{rh-var(surface--border-width)};
  --rh-band--borderBottomWidth:               #{rh-var(surface--border-width)};
  --rh-band--borderStyle:                     #{rh-var(surface--border-style)};
  // Accent title styles
  --rh-band_header-title--color:             #{rh-color(ui-accent)};
  // Layouts, grid layouts
  --rh-band_header--layout:                   1fr;
  --rh-band_body--layout:                     1fr;
  --rh-band_footer--layout:                   1fr;
  // Text colors
  --rh-broadcasted--color--text:              #{rh-color(surface--base--text)};
  --rh-broadcasted--color--ui-link:           #{rh-color(surface--base--link)};
  --rh-broadcasted--color--ui-link--visited:  #{rh-color(surface--base--link--visited)};
  --rh-broadcasted--color--ui-link--hover:    #{rh-color(surface--base--link--hover)};
  --rh-broadcasted--color--ui-link--focus:    #{rh-color(surface--base--link--focus)};
  // Band width logic
  // Initialize at mobile breakpoint
  --rh-band--width:                           auto;

  // Loop through the other breakpoints
  @each $size in (sm, md, lg, xl) {
    @media screen and (min-width: rh-breakpoint(#{$size})) {
      --rh-band--width: calc(#{rh-breakpoint(#{$size})} - calc(#{rh-local(paddingRight)} * 2));
    }
  }
  // Reduce padding for print
  @media print {
    --rh-band--paddingTop:    calc(#{rh-var(container-spacer)} * 2);
    --rh-band--paddingBottom: calc(#{rh-var(container-spacer)} * 2);
  }

  // Tag element styles
  display: block;
}

@each $color in (dark, darkest, accent, complement, light, lightest) {
  :host([color="#{$color}"]) {
    --rh-band--backgroundColor:                  #{rh-color(surface--#{$color})};
    --rh-broadcasted--color--text:               #{rh-color(surface--#{$color}--text)};
    --rh-broadcasted--color--ui-link:            #{rh-color(surface--#{$color}--link)};
    --rh-broadcasted--color--ui-link--visited:   #{rh-color(surface--#{$color}--link--visited)};
    --rh-broadcasted--color--ui-link--hover:     #{rh-color(surface--#{$color}--link--hover)};
    --rh-broadcasted--color--ui-link--focus:     #{rh-color(surface--#{$color}--link--focus)};
    @if $color in (dark, darkest, accent, complement) {
      --rh-band_header-title--color:               #{rh-color(ui-accent)};
    } @else {
      --rh-band_header-title--color:               #{rh-color(surface--#{$color}--text)};
    }
  }
}

:host([size="small"]) {
  --rh-band--paddingTop:        rh-var(container-spacer);
  --rh-band--paddingBottom:     rh-var(container-spacer);
}

.rh-band {
  &__wrapper {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-items: flex-start;

    // Padding styles
    padding-top:    rh-local(paddingTop);
    padding-bottom: rh-local(paddingBottom);

    // Border styles
    border-top-width:    rh-local(borderTopWidth);
    border-bottom-width: rh-local(borderBottomWidth);
    border-style:        rh-local(borderStyle);
    border-color:        rh-local(borderColor);

    // Base colors
    background-color:      rh-local(backgroundColor);
    background-position-x: rh-local(backgroundPositionX);
    background-position-y: rh-local(backgroundPositionY);
    color:                 rh-radio(color--text);

    // Remove background color for print
    @include rh-no-print-background;
  }
  &__container {
    padding-top:    0;
    padding-right:  rh-local(paddingRight);
    padding-bottom: 0;
    padding-left:   rh-local(paddingLeft);
    width:          rh-local(width);
    margin:         0 auto;
  }
  &__container,
  &__content {
    // Aside layouts
    display:        flex;
    flex-direction: column;
    @media (min-width: #{rh-breakpoint(md)}) {
      flex-direction: row;
    }
    > * {
      flex-grow: 1;
      @media (min-width: #{rh-breakpoint(sm)}) {
        float: left;
        width: 100%;
      }
      @media (max-width: #{rh-breakpoint(md) - 1}) {
        margin-bottom: #{$rh-global--spacer * 2};
        clear: both;
      }
      &:first-child {
        @media (min-width: #{rh-breakpoint(md)}) {
          width:        calc(100% - #{$aside-md} + #{rh-var(container-spacer) * 2});
          margin-right: #{rh-var(container-spacer) * 2};
        }
        @media (min-width: #{rh-breakpoint(lg)}) {
          width: calc(100% - #{$aside-lg} + #{rh-var(container-spacer) * 2});
        }
      }
      &:last-child {
        margin-bottom: 0;
      } 
      [aside-position~="left"] & {
        @media (min-width: #{rh-breakpoint(sm)}) {
          float: right;
        }
        &:first-child {
          @media (min-width: #{rh-breakpoint(md)}) {
            margin-left: #{rh-var(container-spacer) * 2};
          }
        }
        &:last-child {
          order: -1;
        }
      }
    }
  }
  &__main > *:not(:last-child) {
    margin-bottom: #{rh-var(container-spacer)};
  }
  &__header,
  &__body,
  &__footer,
  &__aside {
    display: block;
    &::slotted(*) {
      margin-top: 0;
    }
  }
  &__header {
    $SLOT: header;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    @media screen and (min-width: #{rh-breakpoint(md)}) {
      grid-template-columns: rh-local(layout);
    }
  }
  &__body {
    $SLOT: body;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    @media screen and (min-width: #{rh-breakpoint(md)}) {
      grid-template-columns: rh-local(layout);
    }
  }
  &__footer {
    $SLOT: footer;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    @media screen and (min-width: #{rh-breakpoint(md)}) {
      grid-template-columns: rh-local(layout);
    }
  }
  &__aside {
    $SLOT: aside;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: rh-var(container-spacer);
    max-width: #{$aside-md};
    @media screen and (min-width: #{rh-breakpoint(md)}) {
      grid-template-columns: rh-local(layout);
    }
    @media (min-width: #{rh-breakpoint(lg)}) {
      width: #{$aside-lg};
    }
  }
}
