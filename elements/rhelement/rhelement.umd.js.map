{"version":3,"file":"rhelement.umd.js","sources":["reveal.umd.js","rhelement.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nlet logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { autoReveal } from \"./reveal.umd.js\";\n\nclass RHElement extends HTMLElement {\n  static create(rhe) {\n    window.customElements.define(rhe.tag, rhe);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      RHElement._debugLog = !!preference;\n    }\n    return RHElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (RHElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get RhTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Pattern: \"pattern\"\n    };\n  }\n\n  get rhType() {\n    return this.getAttribute(\"rh-type\");\n  }\n\n  set rhType(value) {\n    this.setAttribute(\"rh-type\", value);\n  }\n\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  size() {\n    return {\n      \"width\": this.offsetWidth,\n      \"height\": this.offsetHeight\n    }\n  }\n\n  constructor(rhClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this._rhClass = rhClass;\n    this.tag = rhClass.tag;\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"rhType\",\n          value: type\n        }\n      });\n    }\n\n    // Set the EQ values on container elements\n    // console.log(type);\n    // if (type === \"container\") {\n      this._queueAction(\n        {\n          type: \"setCustomProperty\",\n          data: {\n            name: \"--rh-eq--width\",\n            value: this._getContainerSize().width\n          }\n        },\n        {\n          type: \"setCustomProperty\",\n          data: {\n            name: \"--rh-eq--height\",\n            value: this._getContainerSize().height\n          }\n        }\n      );\n    // }\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    this.classList.add(\"rhelement\");\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._rhClass.cascadingAttributes) {\n      return;\n    }\n\n    const cascadeTo = this._rhClass.cascadingAttributes[attr];\n    if (cascadeTo) {\n      this._copyAttribute(attr, cascadeTo);\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  // Set the custom property value\n  _setCustomProperty(name, value) {\n    this.shadowRoot.querySelector(\n      \"style\"\n    ).textContent += `:host { ${name}: ${value}; }`;\n  }\n\n  // Get the size of the container by selector\n  _getContainerSize(selector = \"self\") {\n    let el = this;\n    if (selector !== \"self\") {\n      el = this.shadowRoot.querySelector(selector);\n    }\n    return {\n      \"height\": el.offsetHeight,\n      \"width\":  el.offsetWidth\n    };\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    RHElement.log(`[${this.tag}]`, ...msgs);\n  }\n}\n\nautoReveal(RHElement.log);\n\nexport default RHElement;\n//# sourceMappingURL=rhelement.js.map\n"],"names":["logger","handleWebComponentsReady","document","body","removeAttribute","RHElement","rhClass","type","delayRender","_rhClass","tag","_queue","template","createElement","attachShadow","mode","_queueAction","_this","_getContainerSize","width","height","render","HTMLElement","name","this","querySelector","offsetWidth","offsetHeight","getAttribute","value","setAttribute","rhe","customElements","define","preference","_debugLog","debugLog","log","window","ShadyCSS","styleElement","classList","add","length","_processQueue","attr","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","to","recipients","querySelectorAll","shadowRoot","fname","action","push","forEach","data","textContent","selector","el","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","msgs","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","addEventListener","autoReveal"],"mappings":"qLAsBA,IAAIA,EAAS,kBAAM,MAwBnB,SAASC,MACA,yFArBAC,SAASC,KAAKC,gBAAgB,gYCFjCC,yBA6CQC,gEAAgD,OAArCC,KAAAA,aAAO,WAAMC,YAAAA,gWAG7BC,SAAWH,IACXI,IAAMJ,EAAQI,MACdC,OAAS,KACTC,SAAWV,SAASW,cAAc,cAElCC,aAAa,CAAEC,KAAM,SAEtBR,KACGS,aAAa,MACV,mBACA,MACE,eACCT,OAQNS,aACH,MACQ,yBACA,MACE,uBACCC,EAAKC,oBAAoBC,QAGpC,MACQ,yBACA,MACE,wBACCF,EAAKC,oBAAoBE,UAMnCZ,KACEa,8UAvFaC,iDAkCbC,UACAC,KAAKC,wBAAwBF,6CAI7B,OACIC,KAAKE,mBACJF,KAAKG,oDAdVH,KAAKI,aAAa,yBAGhBC,QACJC,aAAa,UAAWD,oCA9BjBE,UACLC,eAAeC,OAAOF,EAAIrB,IAAKqB,0CAGxBG,yDAAa,YACR,OAAfA,MACQC,YAAcD,GAEnB7B,EAAU8B,8CAIb9B,EAAU+B,wBACJC,6DAKH,WACM,oBACF,kBACA,8DAsEPC,OAAOC,iBACFA,SAASC,aAAahB,WAG1BiB,UAAUC,IAAI,aAEflB,KAAKb,OAAOgC,aACTC,iEAIgBC,EAAMC,EAAQC,MAChCvB,KAAKf,SAASuC,yBAIbC,EAAYzB,KAAKf,SAASuC,oBAAoBH,GAChDI,QACGC,eAAeL,EAAMI,2CAIf1B,EAAM4B,OACbC,cACD5B,KAAK6B,iBAAiBF,MACtB3B,KAAK8B,WAAWD,iBAAiBF,KAEhCtB,EAAQL,KAAKI,aAAaL,GAC1BgC,EAAiB,MAAT1B,EAAgB,kBAAoB,kDAC/BuB,iDAAY,SACxBG,GAAOhC,EAAMM,uHAIT2B,QACN7C,OAAO8C,KAAKD,2DAIZ7C,OAAO+C,QAAQ,kBACTF,EAAOjD,MAAQiD,EAAOG,aAG5BhD,OAAS,+CAGDY,IAAAA,KAAMM,IAAAA,WACdN,GAAQM,6CAIIN,EAAMM,QAClByB,WAAW7B,cACd,SACAmC,wBAA0BrC,OAASM,wDAIrBgC,yDAAW,OACvBC,EAAKtC,WACQ,SAAbqC,MACGrC,KAAK8B,WAAW7B,cAAcoC,IAE9B,QACKC,EAAGnC,mBACHmC,EAAGpC,mDAKV4B,WAAWS,UAAY,QACvBnD,SAASmD,UAAYvC,KAAKwC,KAE3B1B,OAAOC,iBACFA,SAAS0B,gBAAgBzC,KAAKZ,SAAUY,KAAKd,UAGjD4C,WAAWY,YAAY1C,KAAKZ,SAASuD,QAAQC,WAAU,6DAGvDC,2CACKhC,iBAAQb,KAAKd,gBAAW2D,oBDxK/B,SAAoBC,KAChBA,MAMHC,EAAkBjC,OAAOkC,cACzBC,EAAgBF,GAAmBjC,OAAOkC,cAAcE,OAEzDH,GAAmBE,aAGfE,iBAAiB,qBAAsB1E,GC+JlD2E,CAAWvE,EAAUgC"}