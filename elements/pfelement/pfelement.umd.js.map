{"version":3,"file":"pfelement.umd.js","sources":["reveal.umd.js","pfelement.umd.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nlet logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { autoReveal } from \"./reveal.umd.js\";\n\nclass PFElement extends HTMLElement {\n  static create(pfe) {\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  get pfeType() {\n    return this.getAttribute(\"pfe-type\");\n  }\n\n  set pfeType(value) {\n    this.setAttribute(\"pfe-type\", value);\n  }\n\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    if(typeof pfeClass.properties === \"object\") {\n      this._mapSchemaToProperties(pfeClass.properties);\n    }\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"pfeType\",\n          value: type\n        }\n      });\n    }\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n\n  connectedCallback() {\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    this.classList.add(\"PFElement\");\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.cascadingAttributes) {\n      return;\n    }\n\n    const cascadeTo = this._pfeClass.cascadingAttributes[attr];\n    if (cascadeTo) {\n      this._copyAttribute(attr, cascadeTo);\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  _mapSchemaToProperties(properties) {\n    // Map the imported properties json to real props on the element\n    // @notice static getter of properties is built via tooling\n    // to edit modify src/element.json\n    Object.entries(properties).forEach(prop => {\n      let attr = prop[0];\n      let data = prop[1];\n      // Set the attribute's property equal to the schema input\n      this[attr] = data;\n      // Initialize the value to null\n      this[attr].value = null;\n\n      // If the attribute exists on the host\n      if (this.hasAttribute(attr)) {\n        // Set property value based on the existing attribute\n        this[attr].value = this.getAttribute(attr);\n      }\n      // Otherwise, look for a default and use that instead\n      else if (data.default) {\n        // If the dependency exists or there are no dependencies, set the default\n        if(this._hasDependency(data.options) || (data.options && data.options.dependencies.length <= 0)) {\n          this.setAttribute(attr, data.default);\n          this[attr].value = data.default;\n        }\n      }\n    });\n  }\n\n  _hasDependency(opts) {\n    // Get any possible dependencies for this attribute to exist\n    let dependencies = opts ? opts.dependencies : [];\n    // Check that dependent item exists\n    dependencies.forEach(dep => {\n      // If the type is slot, check that it exists OR\n      // if the type is an attribute, check if the attribute is defined\n      if ((dep.type === \"slot\" && this.has_slot(dep.id)) ||\n        (dep.type === \"attribute\" && this.getAttribute(dep.id))) {\n        // If the slot does exist, add the attribute with the default value\n        return true;\n      }\n    });\n    return false;\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    PFElement.log(`[${this.tag}]`, ...msgs);\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n//# sourceMappingURL=PFElement.js.map\n"],"names":["logger","handleWebComponentsReady","document","body","removeAttribute","PFElement","pfeClass","type","delayRender","_pfeClass","tag","_queue","template","createElement","babelHelpers.typeof","properties","_mapSchemaToProperties","attachShadow","mode","_queueAction","render","HTMLElement","name","this","querySelector","getAttribute","value","setAttribute","pfe","customElements","define","preference","_debugLog","debugLog","log","window","ShadyCSS","styleElement","classList","add","length","_processQueue","attr","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","to","recipients","querySelectorAll","shadowRoot","fname","entries","forEach","prop","data","_this2","hasAttribute","default","_hasDependency","options","dependencies","opts","dep","_this3","has_slot","id","action","push","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","msgs","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","addEventListener","autoReveal"],"mappings":"qLAsBA,IAAIA,EAAS,kBAAM,MAwBnB,SAASC,MACA,yFArBAC,SAASC,KAAKC,gBAAgB,4kBCFjCC,yBAsCQC,gEAAiD,OAArCC,KAAAA,aAAO,WAAMC,YAAAA,gWAG9BC,UAAYH,IACZI,IAAMJ,EAASI,MACfC,OAAS,KACTC,SAAWV,SAASW,cAAc,YAEL,WAA/BC,EAAOR,EAASS,eACZC,uBAAuBV,EAASS,cAGlCE,aAAa,CAAEC,KAAM,SAEtBX,KACGY,aAAa,MACV,mBACA,MACE,gBACCZ,KAKRC,KACEY,8UA/DaC,iDAkCbC,UACAC,KAAKC,wBAAwBF,+CAR7BC,KAAKE,aAAa,0BAGfC,QACLC,aAAa,WAAYD,oCA9BlBE,UACLC,eAAeC,OAAOF,EAAIlB,IAAKkB,0CAGxBG,yDAAa,YACR,OAAfA,MACQC,YAAcD,GAEnB1B,EAAU2B,8CAIb3B,EAAU4B,wBACJC,8DAKH,WACM,oBACF,gBACF,4DA8CLC,OAAOC,iBACFA,SAASC,aAAad,WAG1Be,UAAUC,IAAI,aAEfhB,KAAKZ,OAAO6B,aACTC,iEAIgBC,EAAMC,EAAQC,MAChCrB,KAAKd,UAAUoC,yBAIdC,EAAYvB,KAAKd,UAAUoC,oBAAoBH,GACjDI,QACGC,eAAeL,EAAMI,2CAIfxB,EAAM0B,OACbC,cACD1B,KAAK2B,iBAAiBF,MACtBzB,KAAK4B,WAAWD,iBAAiBF,KAEhCtB,EAAQH,KAAKE,aAAaH,GAC1B8B,EAAiB,MAAT1B,EAAgB,kBAAoB,kDAC/BuB,iDAAY,SACxBG,GAAO9B,EAAMI,iIAICX,qBAIdsC,QAAQtC,GAAYuC,QAAQ,gBAC7BZ,EAAOa,EAAK,GACZC,EAAOD,EAAK,KAEXb,GAAQc,IAERd,GAAMhB,MAAQ,KAGf+B,EAAKC,aAAahB,KAEfA,GAAMhB,MAAQ+B,EAAKhC,aAAaiB,GAG9Bc,EAAKG,UAETF,EAAKG,eAAeJ,EAAKK,UAAaL,EAAKK,SAAWL,EAAKK,QAAQC,aAAatB,QAAU,OACtFb,aAAae,EAAMc,EAAKG,WACxBjB,GAAMhB,MAAQ8B,EAAKG,kDAMjBI,qBAEMA,EAAOA,EAAKD,aAAe,IAEjCR,QAAQ,eAGD,SAAbU,EAAIzD,MAAmB0D,EAAKC,SAASF,EAAIG,KAC9B,cAAbH,EAAIzD,MAAwB0D,EAAKxC,aAAauC,EAAIG,WAE5C,KAGJ,uCAGIC,QACNzD,OAAO0D,KAAKD,2DAIZzD,OAAO2C,QAAQ,kBACTc,EAAO7D,MAAQ6D,EAAOZ,aAG5B7C,OAAS,+CAGDW,IAAAA,KAAMI,IAAAA,WACdJ,GAAQI,wCAIRyB,WAAWmB,UAAY,QACvB1D,SAAS0D,UAAY/C,KAAKgD,KAE3BpC,OAAOC,iBACFA,SAASoC,gBAAgBjD,KAAKX,SAAUW,KAAKb,UAGjDyC,WAAWsB,YAAYlD,KAAKX,SAAS8D,QAAQC,WAAU,6DAGvDC,2CACK1C,iBAAQX,KAAKb,gBAAWkE,oBDzK/B,SAAoBC,KAChBA,MAMHC,EAAkB3C,OAAO4C,cACzBC,EAAgBF,GAAmB3C,OAAO4C,cAAcE,OAEzDH,GAAmBE,aAGfE,iBAAiB,qBAAsBjF,GCgKlDkF,CAAW9E,EAAU6B"}